(defwindow bar0
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "10%"
                               :height "40px"
                               :anchor "top center")
           :stacking "fg"
           :focusable "false"
           :exclusive "false"
  (main_bar))

(defwindow bar1
           :monitor 1
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "10%"
                               :height "40px"
                               :anchor "top center")
           :stacking "fg"
           :focusable "false"
           :exclusive "false"
  (main_bar))

(defwidget main_bar []
           (box :class "main_bar"
                (vpn_module)
                (clock_module)
                (battery_module)
                (net_module)
           )
)

(defpoll time :interval "1s"
              :initial "initial-value"
              `date +%H:%M`)

(defwidget clock_module []
           (eventbox :onclick "${EWW_CMD} open --toggle calendar_window"
            (box :space-evenly true :orientation "h"
                 (label :class "clock" :text "${time}")
            )
            )
)

(defwidget calendar_module []
  (box :class "cal" :orientation "vertical"
       (box :class "cal-in"
       (calendar :class "cal-wid")))
)

(defwindow calendar_window
  :monitor 0
  :geometry (geometry :x "0px"
                      :y "40px"
                      :anchor "top center")
  (calendar_module)
)

(defpoll bat_status :interval "3s" "~/.config/eww/scripts/bat_status")
(defwidget battery_module []
           (box :class "bat_mod"
                (circular-progress :valign "center"
                                   :class "bat"
                                   :clockwise true
                                   :start-at 75
                                   :thickness 5
                                   :value "${EWW_BATTERY.BAT0.capacity}"
                                   (button
                                    :class "bat_icon ${bat_status == "Charging" ? "bat_charging" : "bat_charged"}"
                                    :tooltip "battery on ${EWW_BATTERY.BAT0.capacity}%"
                                    bat_status
                                    )
                                   )
                )
           )

(defpoll vpn :interval "2s" "~/.config/eww/scripts/vpn label")
(defpoll vpn_tip :interval "2s" "~/.config/eww/scripts/vpn tooltip")
(defwidget vpn_module []
           (box :class "vpn_mod"
                (button
                 :class "vpn_button ${vpn_tip == "Disconnected" ? "vpn_inactive" : "vpn_active"}"
                 :tooltip vpn_tip
                 :onclick `nmcli con up thinkpad`
                 :onrightclick `nmcli con down thinkpad`
                 vpn)
                )
           )

(defpoll net_icon :interval "2s" "~/.config/eww/scripts/network")
(defwidget net_module []
           (label
            :class "net_icon"
            :tooltip "Tooltip"
            :text net_icon
            )
           )


